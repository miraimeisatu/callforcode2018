[{"id":"a9c22725.da4bc8","type":"tab","label":"物流品質評価サンプル","disabled":false,"info":""},{"id":"e3c35cdd.d33ce","type":"template","z":"a9c22725.da4bc8","name":"写真アップロード","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\" class=\"no-js\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n  <title>Watson Visual Recognition on Node-RED</title>\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n</head>\n<body>\n<div class=\"container-fluid\">\n  <div class=\"col-sm-12\">\n    <p>Watson Visual Recognition on Node-RED</p>\n  </div>\n\n  <div class=\"panel panel-success col-sm-12\">\n    <div class=\"panel-heading\">\n      Select an image file\n    </div>\n\n    <div class=\"panel-body\" style=\"height:300px;\">\n      <div class=\"row\">\n        <form id=\"src_image\" action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n          <input class=\"btn btn-info btn-ls\" type=\"file\" name=\"imagedata\" accept=\"image/*\"  />\n        </form>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"btn btn-danger btn-ls\" onclick=\"callVisualRecognition()\"/>\n          Analyze\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"preview\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"panel-footer\" style=\"height:100px;\">\n      <div id=\"result\"></div>\n    </div>\n\n  </div>\n</div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script>\n\n<script type=\"text/javascript\">\n    // Node-REDのWeb API連携\n    var callVisualRecognition = function() {\n\n      // フォームデータを取得\n      var formdata = new FormData($('#src_image').get(0));\n\n      console.log(formdata);\n\n      // POSTでアップロード\n      $.ajax({\n          url  : \"./face1-post\",\n          type : \"POST\",\n          data : formdata,\n          cache       : false,\n          contentType : false,\n          processData : false,\n          dataType    : \"html\"\n      })\n      .done(function(data, textStatus, jqXHR) {\n        var result_element = document.getElementById('result');\n\n        var objResult = JSON.parse(data);\n\n        // 子ノードを全削除\n        if (result_element.hasChildNodes()){\n          for (var i=result_element.childNodes.length-1; i>=0; i--) {\n            result_element.removeChild(result_element.childNodes[i]);\n          }\n        }\n\n        // 年齢\n        var age;\n        age = document.createTextNode(\"age=\"+objResult.images[0].faces[0].age.min +\"~\"+objResult.images[0].faces[0].age.max+\"(\"+objResult.images[0].faces[0].age.score+\")\");\n        var ageBox = document.createElement('p');\n        ageBox.appendChild(age);\n        result_element.appendChild(ageBox);\n\n        // gender\n        gender = document.createTextNode(\"gender=\"+objResult.images[0].faces[0].gender.gender+\"(\"+objResult.images[0].faces[0].gender.score+\")\");\n        var genderBox = document.createElement('p');\n        genderBox.appendChild(gender);\n        result_element.appendChild(genderBox);\n\n        console.log(objResult);\n      })\n      .fail(function(jqXHR, textStatus, errorThrown) {\n          // 通信エラー\n          // do nothing\n          return;\n      })\n      .always(function(data) {\n        // do nothing\n      });\n    }\n</script>\n\n<script>\n$(function(){\n  //画像ファイルプレビュー表示のイベント追加 fileを選択時に発火するイベントを登録\n  $('form').on('change', 'input[type=\"file\"]', function(e) {\n    var file = e.target.files[0],\n        reader = new FileReader(),\n        $preview = $(\".preview\");\n        t = this;\n\n    // 画像ファイル以外の場合は何もしない\n    if(file.type.indexOf(\"image\") < 0){\n      return false;\n    }\n\n    // ファイル読み込みが完了した際のイベント登録\n    reader.onload = (function(file) {\n      return function(e) {\n        //既存のプレビューを削除\n        $preview.empty();\n        // .prevewの領域の中にロードした画像を表示するimageタグを追加\n        $preview.append($('<img>').attr({\n                  src: e.target.result,\n                  height: \"150px\",\n                  class: \"preview\",\n                  title: file.name\n              }));\n      };\n    })(file);\n\n    reader.readAsDataURL(file);\n  });\n});\n\n</script>\n</body>\n</html>\n","x":330,"y":80,"wires":[["9cb0b56a.e22928"]]},{"id":"cacbb4de.1cf6b8","type":"http in","z":"a9c22725.da4bc8","name":"[GET] /face1","url":"/face1","method":"get","upload":false,"swaggerDoc":"","x":130,"y":80,"wires":[["e3c35cdd.d33ce"]]},{"id":"9cb0b56a.e22928","type":"http response","z":"a9c22725.da4bc8","name":"http response","x":539.5,"y":80,"wires":[]},{"id":"3bf9c4b0.873fac","type":"function","z":"a9c22725.da4bc8","name":"jpeg抽出","func":"var buf = msg.req.body;\nvar SOI = new Buffer(\"FFD8\",\"hex\");\nvar EOI = new Buffer(\"FFD9\",\"hex\");\nvar iSOI = 0;\nvar file = \"\";\n\nfor (var i=0 ; i<=buf.length ; i++) {\n    if(SOI.equals(buf.slice(i,i+2))) {\n        iSOI = i;\n        }\n    if(EOI.equals(buf.slice(i,i+2))) {\n        file = buf.slice(iSOI,i+2);\n        break;\n        }\n    }\n\nmsg.file = file;\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":140,"wires":[["7f7844c9.9f5b0c"]]},{"id":"d88ef886.f00af8","type":"http in","z":"a9c22725.da4bc8","name":"[POST] /face1-post","url":"/face1-post","method":"post","upload":false,"swaggerDoc":"","x":125,"y":128,"wires":[["3bf9c4b0.873fac"]]},{"id":"7f7844c9.9f5b0c","type":"function","z":"a9c22725.da4bc8","name":"parse","func":"msg.payload = msg.file;\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":200,"wires":[["a04c732d.6fe69"]]},{"id":"39150e99.319ec2","type":"json","z":"a9c22725.da4bc8","name":"","property":"payload","action":"str","pretty":true,"x":490,"y":260,"wires":[["e6746519.664be8","7d7e65a4.d5d25c"]]},{"id":"39a7ec11.2b0d24","type":"debug","z":"a9c22725.da4bc8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"result","x":570,"y":160,"wires":[]},{"id":"e6746519.664be8","type":"http response","z":"a9c22725.da4bc8","name":"http response","x":620,"y":280,"wires":[]},{"id":"7d7e65a4.d5d25c","type":"debug","z":"a9c22725.da4bc8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":220,"wires":[]},{"id":"480df1d.1309f1","type":"function","z":"a9c22725.da4bc8","name":"parse","func":"msg.payload = msg.result;\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":320,"wires":[["39150e99.319ec2"]]},{"id":"49251648.c24de8","type":"template","z":"a9c22725.da4bc8","name":"写真アップロード","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"ja\" class=\"no-js\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n  <title>Watson Visual Recognition on Node-RED</title>\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n</head>\n<body>\n<div class=\"container-fluid\">\n  <div class=\"col-sm-12\">\n    <p>Watson Visual Recognition on Node-RED</p>\n  </div>\n\n  <div class=\"panel panel-success col-sm-12\">\n    <div class=\"panel-heading\">\n      Select an image file\n    </div>\n\n    <div class=\"panel-body\" style=\"height:300px;\">\n      <div class=\"row\">\n        <form id=\"src_image\" action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n          <input class=\"btn btn-info btn-ls\" type=\"file\" name=\"imagedata\" accept=\"image/*\"  />\n        </form>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"btn btn-danger btn-ls\" onclick=\"callVisualRecognition()\"/>\n          Analyze\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"preview\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"panel-footer\" style=\"height:100px;\">\n      <div id=\"result\"></div>\n    </div>\n\n  </div>\n</div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script>\n\n<script type=\"text/javascript\">\n    // Node-REDのWeb API連携\n    var callVisualRecognition = function() {\n\n      // フォームデータを取得\n      var formdata = new FormData($('#src_image').get(0));\n\n      console.log(formdata);\n\n      // POSTでアップロード\n      $.ajax({\n          url  : \"./cust1-post\",\n          type : \"POST\",\n          data : formdata,\n          cache       : false,\n          contentType : false,\n          processData : false,\n          dataType    : \"html\"\n      })\n      .done(function(data, textStatus, jqXHR) {\n        var result_element = document.getElementById('result');\n\n        var objResult = JSON.parse(data);\n        console.log(objResult);\n\n        // 子ノードを全削除\n        if (result_element.hasChildNodes()){\n          for (var i=result_element.childNodes.length-1; i>=0; i--) {\n            result_element.removeChild(result_element.childNodes[i]);\n          }\n        }\n\n        // classifierId+name\n        var classifier;\n        classifier = document.createTextNode(\"classifierId=\"+objResult.images[0].classifiers[0].classifier_id+\", classifierName=\"+objResult.images[0].classifiers[0].name);\n        var classifierBox = document.createElement('p');\n        classifierBox.appendChild(classifier);\n        result_element.appendChild(classifierBox);\n\n        // classes\n        var classes;\n        classes = document.createTextNode(\"className=\"+objResult.images[0].classifiers[0].classes[0].class +\", score=\"+objResult.images[0].classifiers[0].classes[0].score );\n        var classesBox = document.createElement('p');\n        classesBox.appendChild(classes);\n        result_element.appendChild(classesBox);\n      })\n      .fail(function(jqXHR, textStatus, errorThrown) {\n          // エラー\n          var error;\n          error = document.createTextNode(\"error=\"+data);\n          var errorBox = document.createElement('p');\n          errorBox.appendChild(error);\n          result_element.appendChild(errorBox);\n          return;\n      })\n      .always(function(data) {\n        // do nothing\n      });\n    }\n</script>\n\n<script>\n$(function(){\n  //画像ファイルプレビュー表示のイベント追加 fileを選択時に発火するイベントを登録\n  $('form').on('change', 'input[type=\"file\"]', function(e) {\n    var file = e.target.files[0],\n        reader = new FileReader(),\n        $preview = $(\".preview\");\n        t = this;\n\n    // 画像ファイル以外の場合は何もしない\n    if(file.type.indexOf(\"image\") < 0){\n      return false;\n    }\n\n    // ファイル読み込みが完了した際のイベント登録\n    reader.onload = (function(file) {\n      return function(e) {\n        //既存のプレビューを削除\n        $preview.empty();\n        // .prevewの領域の中にロードした画像を表示するimageタグを追加\n        $preview.append($('<img>').attr({\n                  src: e.target.result,\n                  height: \"150px\",\n                  class: \"preview\",\n                  title: file.name\n              }));\n      };\n    })(file);\n\n    reader.readAsDataURL(file);\n  });\n});\n\n</script>\n</body>\n</html>\n","x":330,"y":420,"wires":[["42ac763b.d26cc8"]]},{"id":"6c8788b1.6a9388","type":"http in","z":"a9c22725.da4bc8","name":"[GET] /cust1","url":"/cust1","method":"get","upload":false,"swaggerDoc":"","x":130,"y":420,"wires":[["49251648.c24de8"]]},{"id":"42ac763b.d26cc8","type":"http response","z":"a9c22725.da4bc8","name":"http response","x":539.5,"y":420,"wires":[]},{"id":"eb0058cc.eccc88","type":"function","z":"a9c22725.da4bc8","name":"jpeg抽出","func":"var buf = msg.req.body;\nvar SOI = new Buffer(\"FFD8\",\"hex\");\nvar EOI = new Buffer(\"FFD9\",\"hex\");\nvar iSOI = 0;\nvar file = \"\";\n\nfor (var i=0 ; i<=buf.length ; i++) {\n    if(SOI.equals(buf.slice(i,i+2))) {\n        iSOI = i;\n        }\n    if(EOI.equals(buf.slice(i,i+2))) {\n        file = buf.slice(iSOI,i+2);\n        break;\n        }\n    }\n\nmsg.file = file;\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":480,"wires":[["ec132d76.00162"]]},{"id":"2cb99d1b.d0c382","type":"http in","z":"a9c22725.da4bc8","name":"[POST] /cust1-post","url":"/cust1-post","method":"post","upload":false,"swaggerDoc":"","x":125,"y":468,"wires":[["eb0058cc.eccc88"]]},{"id":"ec132d76.00162","type":"function","z":"a9c22725.da4bc8","name":"parse","func":"msg.payload = msg.file;\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":540,"wires":[["d77b5a8d.d821a8"]]},{"id":"8b72a21d.04572","type":"json","z":"a9c22725.da4bc8","name":"","property":"payload","action":"str","pretty":true,"x":490,"y":600,"wires":[["cb27a8df.97c158","4f41385b.c698c8"]]},{"id":"44ab232b.6cc57c","type":"debug","z":"a9c22725.da4bc8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"result","x":570,"y":500,"wires":[]},{"id":"cb27a8df.97c158","type":"http response","z":"a9c22725.da4bc8","name":"http response","x":620,"y":620,"wires":[]},{"id":"4f41385b.c698c8","type":"debug","z":"a9c22725.da4bc8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":560,"wires":[]},{"id":"643f16c0.7ae348","type":"function","z":"a9c22725.da4bc8","name":"parse","func":"msg.payload = msg.result;\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":660,"wires":[["8b72a21d.04572"]]},{"id":"d77b5a8d.d821a8","type":"function","z":"a9c22725.da4bc8","name":"Visual Recognitionカスタム認識の設定","func":"msg.params = {};\nmsg.params.classifier_ids = \"DefaultCustomModel_1898051895\";\nmsg.params.threshold = \"0.2\";\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":600,"wires":[["b4bbc2d6.cc09"]]},{"id":"b4bbc2d6.cc09","type":"visual-recognition-v3","z":"a9c22725.da4bc8","name":"Detect Custom","apikey":"","image-feature":"classifyImage","lang":"ja","x":280,"y":660,"wires":[["643f16c0.7ae348","44ab232b.6cc57c"]]},{"id":"a04c732d.6fe69","type":"visual-recognition-v3","z":"a9c22725.da4bc8","name":"","apikey":"","vr-service-endpoint":"https://gateway.watsonplatform.net/visual-recognition/api","image-feature":"detectFaces","lang":"","x":190,"y":280,"wires":[["480df1d.1309f1","39a7ec11.2b0d24"]]},{"id":"9327753a.fb1ab","type":"http in","z":"a9c22725.da4bc8","name":"","url":"/test","method":"get","upload":false,"swaggerDoc":"","x":140,"y":20,"wires":[["fd43d664.f36e48"]]},{"id":"fd43d664.f36e48","type":"template","z":"a9c22725.da4bc8","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"ホームページ出来た！","output":"str","x":300,"y":20,"wires":[["c6e31e84.746b28"]]},{"id":"c6e31e84.746b28","type":"http response","z":"a9c22725.da4bc8","name":"","statusCode":"","headers":{},"x":480,"y":20,"wires":[]}]